plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.17.3'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
}

group 'io.openliberty.tools'
version '24.0.6-SNAPSHOT'

sourceCompatibility = 17
targetCompatibility = 17

def remoteRobotVersion = "0.11.18"

repositories {
    mavenCentral()
    maven {
        url 'https://repo.eclipse.org/content/repositories/snapshots'
    }
    maven {
        url 'https://repo.eclipse.org/content/repositories/releases'
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url = "https://packages.jetbrains.team/maven/p/ij/intellij-dependencies"
    }
    maven {
        url = "https://www.jetbrains.com/intellij-repository/releases"
    }
    maven {
        url = "https://packages.jetbrains.team/maven/p/kpm/public"
    }
    maven {
        url = "https://cache-redirector.jetbrains.com/packages.jetbrains.team/maven/p/grazi/grazie-platform-public"
    }
    maven {
        url = "https://download.jetbrains.com/teamcity-repository"
    }
    maven {
        url = "https://cache-redirector.jetbrains.com/download-pgp-verifier"
    }

    mavenLocal() // TODO remove once Liberty LS is publicly available
}

configurations {
    lsp
    // needed to avoid ClassCastException org.apache.xerces.jaxp.DocumentBuilderFactoryImpl cannot be cast to class javax.xml.parsers.DocumentBuilderFactory
    // xml-apis interfering with Xerces
    all*.exclude group: 'xml-apis'

    runtimeClasspath {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }

    // Ensures that the JVM target is set to 17 for all Kotlin compilation tasks, including both main and test sources.
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "17"
        }
    }
}

dependencies {

    implementation ('org.eclipse.lsp4mp:org.eclipse.lsp4mp.ls:0.12.0-SNAPSHOT') {
        exclude group: 'org.eclipse.lsp4j'
    }
    implementation ('org.eclipse.lemminx:org.eclipse.lemminx:0.26.1') {
        exclude group: 'org.eclipse.lsp4j'
    }
    implementation 'io.openliberty.tools:liberty-langserver-lemminx:2.1.2'
    implementation ('io.openliberty.tools:liberty-langserver:2.1.2') {
        exclude group: 'org.eclipse.lsp4j'
    }
    implementation ('org.eclipse.lsp4jakarta:org.eclipse.lsp4jakarta.ls:0.2.0') {
        exclude group: 'org.eclipse.lsp4mp'
        exclude group: 'org.eclipse.lsp4j'
    }
    //required by lsp4j as the version from IJ is incompatible
    testImplementation 'com.google.code.gson:gson:2.8.9'
//    implementation 'com.vladsch.flexmark:flexmark:0.64.8'
//    implementation 'org.jsoup:jsoup:1.15.3'
    //Add junit dependency back when tests are added
    //testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    implementation 'org.apache.maven:maven-artifact:3.6.3'

    // Test: basics.
    testImplementation 'com.intellij.remoterobot:remote-robot:' + remoteRobotVersion
    testImplementation 'com.intellij.remoterobot:remote-fixtures:' + remoteRobotVersion
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation('com.jetbrains.intellij.maven:maven-test-framework:241.15989.150') {
        transitive = false
    }
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.9.2'

    // JUnit 4
    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.3'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.9.3'

    // Test: Video Recording.
    testImplementation 'com.automation-remarks:video-recorder-junit5:2.0'

    // define jars to grab locally (if falling back to mavenLocal() repo)
    lsp('org.eclipse.lsp4mp:org.eclipse.lsp4mp.ls:0.10.0:uber') {
        transitive = false
    }
    lsp('org.eclipse.lemminx:org.eclipse.lemminx:0.26.1:uber') {
        transitive = false
    }
    lsp('io.openliberty.tools:liberty-langserver-lemminx:2.1.2:jar-with-dependencies') {
        transitive = false
    }
    lsp('io.openliberty.tools:liberty-langserver:2.1.2:jar-with-dependencies') {
        transitive = false
    }
    lsp('org.eclipse.lsp4jakarta:org.eclipse.lsp4jakarta.ls:0.2.0:jar-with-dependencies') {
        transitive = false
    }
    implementation files(new File(buildDir, 'server')) {
        builtBy 'copyDeps'
    }
}

task copyDeps(type: Copy) {
    from configurations.lsp
    into new File(buildDir, 'server/server')
    rename '^(.*)(-[0-9]+[.[0-9]+]+(-SNAPSHOT)?)(.*)$', '$1$4'
}

runIde {
    jvmArgs '--add-exports', 'java.base/jdk.internal.vm=ALL-UNNAMED'
}

intellij {
    // For a full list of IntelliJ IDEA releases please see https://www.jetbrains.com/intellij-repository/releases
    version = '2024.1.1'

    plugins = ['java', 'maven', 'gradle-java', 'properties', 'terminal', 'org.jetbrains.idea.maven', 'com.intellij.gradle', file("../lsp4ij/build/distributions/LSP4IJ/")]
    updateSinceUntilBuild = false
}

downloadRobotServerPlugin {
    version.set(remoteRobotVersion)
}

runIdeForUiTests {
    systemProperty "robot-server.port", "8082"
    systemProperty "ide.mac.message.dialogs.as.sheets", "false"
    systemProperty "jb.privacy.policy.text", "<!--999.999-->"
    systemProperty "jb.consents.confirmation.enabled", "false"
    systemProperty "idea.trust.all.projects", "true"
    systemProperty "ide.show.tips.on.startup.default.value", "false"
    systemProperty "ide.mac.file.chooser.native", "false"
    systemProperty "jbScreenMenuBar.enabled", "false"
    systemProperty "apple.laf.useScreenMenuBar", "false"
}

test {
    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}

tasks {
    // Disabling buildSearchableOptions, which runs as part of the buildPlugin task.
    // this is to buildSearchableOptions to workaround the "Only one instance of IDEA can be run at a time" problem.
    // Per documentation: https://plugins.jetbrains.com/docs/intellij/ide-development-instance.html#the-development-instance-sandbox-directory
    buildSearchableOptions {
        enabled = false
    }
}

patchPluginXml {
    changeNotes = """
        <h2> 24.0.3 </h2>
        <p>Version 24.0.3 of Liberty Tools for IntelliJ IDEA contains enhancements and fixes. Version 24.0.3 requires IntelliJ IDEA version 2023.2.* or 2023.3.* and a minimum of Java 17.</p>
        Notable changes:
        <ul>
        <li> Added support for IntelliJ IDEA 2023.3 and its successive fix releases.
        <li> Completion support for MicroProfile APIs in Java files, provided by the <a href="https://github.com/eclipse/lsp4mp">Language Server for MicroProfile</a>.
        <li> When the contents of the Liberty tool window are too large to fit in its window, a scroll bar appears.
        <li> Helpful advice is displayed when no project appears in the Liberty tool window.
        <li> Added the Language Servers tool window, which you can use when you need technical support.
        <li> Updated the <a href="https://github.com/OpenLiberty/liberty-language-server">Liberty Config Language Server</a> version to 2.1.2. For more information about the changes for version 2.1.2, refer to the following release notes:
          <ul>
            <li> https://github.com/OpenLiberty/liberty-language-server/releases/tag/liberty-langserver-2.1.2
            <li> https://github.com/OpenLiberty/liberty-language-server/releases/tag/lemminx-liberty-2.1.2
          </ul>
        <li> Updated the <a href="https://github.com/eclipse/lsp4jakarta">Language Server for Jakarta EE</a> version to 0.2.0. For more information about changes for version 0.2.0, refer to the following release notes:
          <ul>
            <li>https://github.com/eclipse/lsp4jakarta/releases/tag/0.2.0
          </ul> 
        <li> Updated <a href="https://github.com/eclipse/lsp4mp">Language Server for MicroProfile</a> version to 0.10.0. Refer to the following release tag:
          <ul>
            <li>https://github.com/eclipse/lsp4mp/releases/tag/0.10.0
          </ul>
        </ul>
        <p>Note: You may observe slow performance when editing your server.xml file when invoking completion or hover. It is possible you may receive a "No documentation found" message on hover. If observed, please report your experience on this GitHub issue: https://github.com/OpenLiberty/liberty-tools-intellij/issues/687.</p>
        See the <a href="https://github.com/OpenLiberty/liberty-tools-intellij/compare/23.0.12...24.0.3">commit log</a> for the full set of changes since the previous release.
        <br>
        <h2> 23.0.12 </h2>
        <p>Version 23.0.12 of Liberty Tools for IntelliJ IDEA contains enhancements and fixes. Version 23.0.12 requires IntelliJ IDEA version 2023.1.* or 2023.2.* and a minimum of Java 17.</p>
        Notable changes:
        <ul>
        <li> Partial quick fix support for Jakarta EE Web Profile 9.x APIs when editing Java files via the <a href="https://github.com/eclipse/lsp4jakarta">Eclipse LSP4Jakarta</a>, Language Server for Jakarta EE
        <li> Updated <a href="https://github.com/OpenLiberty/liberty-language-server">Liberty Config Language Server</a> version to 2.1.1. For information regarding changes for version 2.1, refer to the release notes linked below:
          <ul>
            <li> https://github.com/OpenLiberty/liberty-language-server/releases/tag/liberty-langserver-2.1
            <li> https://github.com/OpenLiberty/liberty-language-server/releases/tag/lemminx-liberty-2.1
          </ul>
        <li> Fix for erroneous detection of projects in the Liberty tool window when the Liberty Gradle Plugin is commented out in the build.gradle file - https://github.com/OpenLiberty/liberty-tools-intellij/issues/445
        <li> Fix for incorrect project name being displayed in the “Remove Liberty project” confirmation dialog - https://github.com/OpenLiberty/liberty-tools-intellij/issues/321
        <li> Fix to link to the Liberty Tools for IntelliJ GitHub issues page when an error in the Liberty Tools plugin is reported by the IntelliJ IDE - https://github.com/OpenLiberty/liberty-tools-intellij/issues/468
        <li> Fix to surface error to user when Java 17 or later is not found when attempting to start up language servers - https://github.com/OpenLiberty/liberty-tools-intellij/issues/196
        <li> Enhancement to enable custom Liberty configuration support provided by the Liberty Config Language Server - https://github.com/OpenLiberty/liberty-tools-intellij/issues/490
        <li> Enhancement to add a “Run in container” checkbox to the Liberty run/debug configuration - https://github.com/OpenLiberty/liberty-tools-intellij/issues/160
        <li> Enhancement to support IntelliJ IDEA version 2023.2.x - https://github.com/OpenLiberty/liberty-tools-intellij/issues/487
        <li> Fix for ClassCastException from Liberty tool window project tree - https://github.com/OpenLiberty/liberty-tools-intellij/issues/561
        <li> Fix for NullPointerException when the Maven executable is not able to execute - https://github.com/OpenLiberty/liberty-tools-intellij/issues/566
        <li> Fix for Liberty start actions not working when the Maven build settings are set to use a Maven wrapper and multiple Maven projects are loaded in the IntelliJ workspace - https://github.com/OpenLiberty/liberty-tools-intellij/issues/563
        <li> Fix for Liberty start actions not working when multiple Gradle projects are loaded in the IntelliJ workspace - https://github.com/OpenLiberty/liberty-tools-intellij/issues/568
        </ul>
        <p>See the <a href="https://github.com/OpenLiberty/liberty-tools-intellij/compare/23.0.6...23.0.12">commit log</a> for the full set of changes since the previous release.</p>
        <h2> 23.0.6 </h2>
        <p>Version 23.0.6 of Liberty Tools for IntelliJ IDEA contains new functionality and fixes. Version 23.0.6 requires IntelliJ IDEA version 2023.1.* and a minimum of Java 17.</p>
        Notable changes:
        <ul>
        <li> Diagnostic and hover support when editing server.xml, server.env, bootstrap.properties via the <a href="https://github.com/OpenLiberty/liberty-language-server">Liberty Config Language Server</a>
        <li> Quick fix support when editing server.xml via the <a href="https://github.com/OpenLiberty/liberty-language-server">Liberty Config Language Server</a>
        <li> Diagnostic and hover support for Jakarta EE Web Profile 9.x APIs when editing Java files via the <a href="https://github.com/eclipse/lsp4jakarta">Eclipse LSP4Jakarta</a>, Language Server for Jakarta EE
        <li> Diagnostic, hover and quick fix support for MicroProfile APIs when editing Java and microprofile-config.properties files via the <a href="https://github.com/eclipse/lsp4mp">Eclipse LSP4MP</a>, Language Server for MicroProfile
        <li> Bug fixes to clean up exceptions and improve overall quality of loading projects in the Liberty tool window and running Liberty actions through the Liberty tool window and Search Everywhere window
        </ul>
        <p>See the <a href="https://github.com/OpenLiberty/liberty-tools-intellij/compare/0.0.8...23.0.6">commit log</a> for the full set of changes since the previous release.</p>
        <h2> 0.0.8 </h2>
        <p>Version 0.0.8 of Liberty Tools for IntelliJ IDEA is an <b>early release</b> that contains new functionality and fixes. Liberty Tools for IntelliJ IDEA now requires IntelliJ IDEA version 2022.2+ and Java 17+.</p>
        Notable enhancements:
        <ul>
        <li> Completion support when editing server.xml, server.env, bootstrap.properties via the <a href="https://github.com/OpenLiberty/liberty-language-server">Liberty Config Language Server</a>.
        <li> Completion support for Jakarta EE Web Profile 9.x APIs when editing Java files via the <a href="https://github.com/eclipse/lsp4jakarta">Eclipse LSP4Jakarta</a>, Language Server for Jakarta EE.
        <li> Completion support for MicroProfile 3 & 4 APIs when editing Java and microprofile-config.properties files via the <a href="https://github.com/eclipse/lsp4mp">Eclipse LSP4MP</a>, Language Server for MicroProfile.
        <li> Liberty projects are now automatically detected via the presence of a “src/main/liberty/config/server.xml” file.
        <li> New Liberty Run/Debug Configuration, accessible through the “Liberty: Start…” action or the IntelliJ Run/Debug Configuration menu. When “Debug” is selected, the Liberty runtime will start and the IntelliJ debugger will automatically attach to the JVM for the running Liberty instance.
        <li> Ability to run Liberty actions through the IntelliJ “Search Everywhere” window.
        <li> Ability to manually add Liberty projects to the Liberty tool window.
        <li> Liberty start actions will honour the Maven home path and Gradle JVM set in IntelliJ IDEA preferences.
        <li> New icons for Maven and Gradle projects in the Liberty tool window.
        </ul>
        <p>See the <a href="https://github.com/OpenLiberty/liberty-tools-intellij/compare/0.0.7...0.0.8">commit log</a> for the full set of changes since the previous early release.</p>
        <h2> 0.0.7 </h2>
        <ul>
        <li> Rename plugin to Liberty Tools for IntelliJ
        </ul>
        <h2> 0.0.6 </h2>
        <ul>
        <li> Fix release
        </ul>
        <h2> 0.0.5 </h2>
        <ul>
        <li> Update action wording and documentation
        </ul>
        <h2> 0.0.4 </h2>
        <ul>
        <li> Removed tech preview wording from "start in container" action
        </ul>
        <h2> 0.0.3 </h2>
        <ul>
        <li> Updated plugin description
        </ul>
        <h2> 0.0.2 </h2>
        <ul>
        <li> Added start in container (tech preview) action
        </ul>
        <h2> 0.0.1 </h2>
        <ul>
        <li> First preview release
        </ul>
        """
    version project.version
}
