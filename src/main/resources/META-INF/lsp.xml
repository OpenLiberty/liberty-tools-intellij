<!--
  ~ Copyright (c) 2022, 2023 IBM Corporation.
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Eclipse Public License v. 2.0 which is available at
  ~ http://www.eclipse.org/legal/epl-2.0.
  ~
  ~  SPDX-License-Identifier: EPL-2.0
  -->

<idea-plugin>
    <extensions defaultExtensionNs="open-liberty.intellij">
        <!-- MicroProfile LS -->
        <server id="lsp4mp" class="io.openliberty.tools.intellij.lsp4mp.lsp.MicroProfileServer"
                clientImpl="io.openliberty.tools.intellij.lsp4mp.lsp.MicroProfileLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="Properties" serverId="lsp4mp"
                         filePattern="**/{microprofile-config.properties,microprofile-config-?*.properties}"/>
        <languageMapping language="JAVA" serverId="lsp4mp"/>

        <!-- LemMinX LS with Liberty LemMinX ext -->
        <!-- TODO changing the server interface to org.eclipse.lemminx.customservice.XMLLanguageClientAPI results in class cast exception -->
        <server id="libertyXml" class="io.openliberty.tools.intellij.liberty.lsp.LibertyXmlServer"
                clientImpl="io.openliberty.tools.intellij.liberty.lsp.LibertyXmlLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="XML" serverId="libertyXml"/>

        <!-- Liberty Config LS -->
        <server id="libertyls" class="io.openliberty.tools.intellij.liberty.lsp.LibertyConfigLanguageServer"
                clientImpl="io.openliberty.tools.intellij.liberty.lsp.LibertyConfigLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="Properties" serverId="libertyls"
                         filePattern="**/{*.properties,*.env}"/>

        <!-- Jakarta LS -->
        <server id="jakartals" class="io.openliberty.tools.intellij.lsp4jakarta.lsp.JakartaLanguageServer"
                clientImpl="io.openliberty.tools.intellij.lsp4jakarta.lsp.JakartaLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="JAVA" serverId="jakartals"/>
    </extensions>
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="server.env" language="TEXT"
                  implementationClass="io.openliberty.tools.intellij.liberty.lsp.ServerEnvFileType"/>
        <!-- Language substitutor for server.env files, treat server.env files as Properties files to get Liberty Config LS capabilities -->
        <lang.substitutor language="TEXT"
                          implementationClass="io.openliberty.tools.intellij.liberty.lsp.ServerEnvSubstitutor"/>
        <!-- Suppress certain Properties language inspections on server.env files -->
        <lang.inspectionSuppressor language="Properties"
                                   implementationClass="io.openliberty.tools.intellij.liberty.lsp.ServerEnvInspectionSuppressor"/>
        <!-- Enable watcher to handle custom liberty config files and provide LCLS support -->
        <projectService serviceImplementation="io.openliberty.tools.intellij.liberty.lsp.LibertyCustomConfigManager"/>
    </extensions>

</idea-plugin>