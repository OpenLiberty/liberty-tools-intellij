<!--
  ~ Copyright (c) 2022, 2023 IBM Corporation.
  ~
  ~ This program and the accompanying materials are made available under the
  ~ terms of the Eclipse Public License v. 2.0 which is available at
  ~ http://www.eclipse.org/legal/epl-2.0.
  ~
  ~  SPDX-License-Identifier: EPL-2.0
  -->

<idea-plugin>
    <!-- Adapted from https://github.com/redhat-developer/intellij-quarkus/blob/2585eb422beeb69631076d2c39196d6eca2f5f2e/src/main/resources/META-INF/lsp.xml -->
    <extensionPoints>
        <extensionPoint name="server"
                        beanClass="io.openliberty.tools.intellij.lsp4mp.lsp4ij.ServerExtensionPointBean"/>
        <extensionPoint name="languageMapping"
                        beanClass="io.openliberty.tools.intellij.lsp4mp.lsp4ij.LanguageMappingExtensionPointBean"/>
    </extensionPoints>
    <extensions defaultExtensionNs="open-liberty.intellij">
        <!-- MicroProfile LS -->
        <server id="lsp4mp" class="io.openliberty.tools.intellij.lsp4mp.lsp.MicroProfileServer"
                clientImpl="io.openliberty.tools.intellij.lsp4mp.lsp.MicroProfileLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="Properties" serverId="lsp4mp" filePattern="**/{microprofile-config.properties,microprofile-config-?*.properties}"/>
        <languageMapping language="JAVA" serverId="lsp4mp"/>

        <!-- LemMinX LS with Liberty LemMinX ext -->
        <!-- TODO changing the server interface to org.eclipse.lemminx.customservice.XMLLanguageClientAPI results in class cast exception -->
        <server id="libertyXml" class="io.openliberty.tools.intellij.liberty.lsp.LibertyXmlServer"
                clientImpl="io.openliberty.tools.intellij.liberty.lsp.LibertyXmlLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="XML" serverId="libertyXml"/>

        <!-- Liberty Config LS -->
        <server id="libertyls" class="io.openliberty.tools.intellij.liberty.lsp.LibertyConfigLanguageServer"
                clientImpl="io.openliberty.tools.intellij.liberty.lsp.LibertyConfigLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="Properties" serverId="libertyls" filePattern="**/{src/main/liberty/config,usr/servers/**}/{bootstrap.properties,server.env}"/>

        <!-- Jakarta LS -->
        <server id="jakartals" class="io.openliberty.tools.intellij.lsp4jakarta.lsp.JakartaLanguageServer"
                clientImpl="io.openliberty.tools.intellij.lsp4jakarta.lsp.JakartaLanguageClient"
                serverInterface="org.eclipse.lsp4mp.ls.api.MicroProfileLanguageServerAPI"/>
        <languageMapping language="JAVA" serverId="jakartals"/>
    </extensions>
    <extensions defaultExtensionNs="com.intellij">
        <fileType name="server.env" language="TEXT" implementationClass="io.openliberty.tools.intellij.liberty.lsp.ServerEnvFileType"/>
        <!-- Language substitutor for server.env files, treat server.env files as Properties files to get Liberty Config LS capabilities -->
        <lang.substitutor language="TEXT" implementationClass="io.openliberty.tools.intellij.liberty.lsp.ServerEnvSubstitutor"/>

        <!-- Completion support for all language servers -->
        <completion.contributor id="LSPCompletionContributor" language="any"
                                implementationClass="io.openliberty.tools.intellij.lsp4mp.lsp4ij.operations.completion.LSContentAssistProcessor"
                                order="first"/>

        <!-- TODO re-enable diagnostics -->
<!--        <inspectionToolProvider-->
<!--                implementation="io.openliberty.tools.intellij.lsp4mp.lsp4ij.operations.diagnostics.LSPInspectionToolProvider"/>-->
        <projectService serviceImplementation="io.openliberty.tools.intellij.lsp4mp.lsp4ij.LanguageServiceAccessor"/>
        <!-- TODO re-enable goto handler -->
        <!-- <gotoDeclarationHandler
                implementation="io.openliberty.tools.intellij.lsp4mp.lsp4ij.operations.navigation.LSPGotoDeclarationHandler"/> -->

        <!-- Hover for LemMinX + Liberty LemMinX ext -->
        <lang.documentationProvider id="LSPTextHoverXML" language="XML"
                                    implementationClass="io.openliberty.tools.intellij.lsp4mp.lsp4ij.operations.hover.LSPTextHover"
                                    order="first"/>
        <!-- Hover for Liberty Config LS bootstrap.properties and LSP4MP microprofile-config.properties -->
        <lang.documentationProvider id="LSPTextHoverProperties" language="Properties"
                                    implementationClass="io.openliberty.tools.intellij.lsp4mp.lsp4ij.operations.hover.LSPTextHover"
                                    order="first"/>
        <!-- Hover for Java files, LSP4MP and LSP4Jakarta -->
        <lang.documentationProvider id="LSPTextHoverJAVA" language="JAVA"
                                    implementationClass="io.openliberty.tools.intellij.lsp4mp.lsp4ij.operations.hover.LSPTextHover"
                                    order="first"/>
        <codeInsight.inlayProvider language="JAVA"
                                   implementationClass="io.openliberty.tools.intellij.lsp4mp.lsp4ij.operations.codelens.LSPInlayProvider"/>
    </extensions>

</idea-plugin>