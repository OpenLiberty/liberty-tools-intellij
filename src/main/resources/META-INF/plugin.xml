<idea-plugin>
    <id>open-liberty.intellij</id>
    <name>Open Liberty Tools</name>

    <vendor url="https://openliberty.io/">Open-Liberty</vendor>

    <category>Framework Integration</category>

    <description><![CDATA[
     Open Liberty Tools adds support in IntelliJ for your <a href="https://openliberty.io/">Open Liberty</a> projects.
     Open Liberty development mode allows you to easily develop your cloud-native Jakarta EE and Java microservices (with MicroProfile) applications with hot reload and deployment.
     <b>This is a preview release.</b>
     <br/>
     The following features are available through the Liberty tool window:
     <ul>
     <li> View supported <a "href=https://github.com/OpenLiberty/ci.maven/blob/master/docs/dev.md#dev"><code>liberty-maven-plugin</code></a> or
     <a "href=https://github.com/OpenLiberty/ci.gradle/blob/master/docs/libertyDev.md"><code>liberty-gradle-plugin</code></a> projects in the workspace
     <li> Start/Stop dev mode
     <li> Start dev mode with custom parameters
     <li> Run tests
     <li> View unit and integration test reports
     </ul>
    ]]></description>

    <depends>com.intellij.modules.platform</depends>
    <depends>org.jetbrains.plugins.terminal</depends>

    <idea-version since-build="193"/>

    <extensions defaultExtensionNs="com.intellij">
        <toolWindow anchor="right" id="Liberty" icon="/icons/OL_logo_13.svg"
                    factoryClass="io.openliberty.tools.intellij.LibertyDevToolWindowFactory"/>

        <!-- LSP4IntelliJ -->
        <!-- register a preloading activity. You need to init IntellijLanguageClient with your config, see readme -->
        <preloadingActivity implementation="io.openliberty.tools.intellij.ls.Lsp4mpPreloadingActivity"
                            id="io.openliberty.tools.intellij.ls.Lsp4mpPreloadingActivity"/>

        <!-- register intellijLanguageClient as a Service OR as a plugin component (see readme)... -->
        <applicationService serviceImplementation="org.wso2.lsp4intellij.IntellijLanguageClient"/>

        <!-- register a listener on editor events, required for lsp file sync -->
        <editorFactoryListener implementation="org.wso2.lsp4intellij.listeners.LSPEditorListener"/>
        <fileDocumentManagerListener implementation="org.wso2.lsp4intellij.listeners.LSPFileDocumentManagerListener"/>

        <!-- for displaying notifications by lsp -->
<!--        <notificationGroup id="lsp" displayType="STICKY_BALLOON"/>-->

        <!-- for displaying the statusbar icon -->
<!--        <statusBarWidgetFactory implementation="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"-->
<!--                                id="org.wso2.lsp4intellij.statusbar.LSPServerStatusWidgetFactory"-->
<!--                                order="first" />-->

        <!-- needed for completion -->
        <!-- TODO set language to any, verify if this is the right selection -->
        <completion.contributor implementationClass="org.wso2.lsp4intellij.contributors.LSPCompletionContributor"
                                id="org.wso2.lsp4intellij.contributors.LSPCompletionContributor" language="any"/>
        <!-- needed for completion as well as signature help -->
        <typedHandler implementation="org.wso2.lsp4intellij.listeners.LSPTypedHandler"
                      id="LSPTypedHandler"/>

        <!-- needed for code diagnostics -->
        <!-- TODO set language to java, verify if this is the right selection -->
<!--        <externalAnnotator id="LSPAnnotator" language="JAVA"-->
<!--                           implementationClass="org.wso2.lsp4intellij.contributors.annotator.LSPAnnotator"/>-->

        <!-- needed for Workspace Symbols -->
        <gotoSymbolContributor implementation="org.wso2.lsp4intellij.contributors.symbol.LSPSymbolContributor"
                               id="LSPSymbolContributor"/>

        <!-- needed for renaming -->
        <renameHandler implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameHandler" id="LSPRenameHandler" order="first"/>
        <renamePsiElementProcessor implementation="org.wso2.lsp4intellij.contributors.rename.LSPRenameProcessor" id="LSPRenameProcessor" order="first"/>
    </extensions>

    <actions>\
        <!-- needed for hover -->
        <action id="org.intellij.sdk.action.QuickDocAction" class="org.wso2.lsp4intellij.actions.LSPQuickDocAction">
        </action>

        <!-- needed for find references -->
        <action class="org.wso2.lsp4intellij.actions.LSPReferencesAction" id="LSPFindUsages">
            <keyboard-shortcut first-keystroke="shift alt F7" keymap="$default"/>
        </action>

        <!-- Liberty Tool Window actions -->
        <action id="io.openliberty.tools.intellij.actions.LibertyDevStartAction"
                class="io.openliberty.tools.intellij.actions.LibertyDevStartAction" text="Start Liberty dev mode"
                description="Start Liberty dev mode on current build file" icon="AllIcons.General.GearPlain" />

        <action id="io.openliberty.tools.intellij.actions.LibertyDevCustomStartAction"
                class="io.openliberty.tools.intellij.actions.LibertyDevCustomStartAction" text="Start Liberty dev mode..."
                description="Custom Start Liberty dev mode on current build file" icon="AllIcons.General.GearPlain" />

        <action id="io.openliberty.tools.intellij.actions.LibertyDevStartContainerAction"
                class="io.openliberty.tools.intellij.actions.LibertyDevStartContainerAction" text="Start Liberty dev mode in container"
                description="Start Liberty dev mode on current build file in a container" icon="AllIcons.General.GearPlain" />

        <action id="io.openliberty.tools.intellij.actions.LibertyDevStopAction"
                class="io.openliberty.tools.intellij.actions.LibertyDevStopAction" text="Stop Liberty dev mode"
                description="Stop Liberty dev mode on current build file" icon="AllIcons.General.GearPlain" />

        <action id="io.openliberty.tools.intellij.actions.LibertyDevRunTestsAction"
                class="io.openliberty.tools.intellij.actions.LibertyDevRunTestsAction" text="Run Liberty dev mode tests"
                description="Run Liberty dev mode tests on current build file" icon="AllIcons.General.GearPlain" />

        <action id="io.openliberty.tools.intellij.actions.ViewIntegrationTestReport"
                class="io.openliberty.tools.intellij.actions.ViewIntegrationTestReport" text="View integration test report"
                description="Open the Maven Failsafe test report for the corresponding Liberty project" icon="AllIcons.General.Web" />

        <action id="io.openliberty.tools.intellij.actions.ViewUnitTestReport"
                class="io.openliberty.tools.intellij.actions.ViewUnitTestReport" text="View unit test report"
                description="Open the Maven Surefire test report for the corresponding Liberty project" icon="AllIcons.General.Web" />

        <action id="io.openliberty.tools.intellij.actions.ViewTestReport"
                class="io.openliberty.tools.intellij.actions.ViewTestReport" text="View test report"
                description="Open the Gradle test report for the corresponding Liberty project" icon="AllIcons.General.Web" />

        <action id="io.openliberty.tools.intellij.actions.ViewEffectivePom"
                class="io.openliberty.tools.intellij.actions.ViewEffectivePom" text="View effective POM"
                description="Open the pom.xml for the corresponding Liberty project" icon="AllIcons.FileTypes.Config" />

        <action id="io.openliberty.tools.intellij.actions.ViewGradleConfig"
                class="io.openliberty.tools.intellij.actions.ViewGradleConfig" text="View Gradle config"
                description="Open the build.gradle for the corresponding Liberty project" icon="AllIcons.FileTypes.Config" />

        <action id="io.openliberty.tools.intellij.actions.RefreshLibertyToolbar"
                class="io.openliberty.tools.intellij.actions.RefreshLibertyToolbar" text="Refresh Liberty tool window"
                description="Refresh Liberty tool window projects" icon="AllIcons.Actions.Refresh"/>

        <action id="io.openliberty.tools.intellij.actions.RunLibertyDevTask"
                class="io.openliberty.tools.intellij.actions.RunLibertyDevTask" text="Run Liberty action"
                description="Run the selected Liberty action" icon="AllIcons.Actions.Execute"/>

    </actions>

    <applicationListeners>
        <!-- required for lsp file sync -->
        <listener class="org.wso2.lsp4intellij.listeners.VFSListener"
                  topic="com.intellij.openapi.vfs.VirtualFileListener"/>
        <listener class="org.wso2.lsp4intellij.listeners.LSPProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </applicationListeners>
</idea-plugin>